// <auto-generated />
using System;
using API_AGROMG.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace API_AGROMG.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20200503203022_Temporaryedit")]
    partial class Temporaryedit
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("API_AGROMG.Model.Action", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("Id");

                    b.ToTable("Actions");
                });

            modelBuilder.Entity("API_AGROMG.Model.ActionLanguange", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ActionId");

                    b.Property<int?>("LanguageId");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("ActionId");

                    b.HasIndex("LanguageId");

                    b.ToTable("ActionLanguanges");
                });

            modelBuilder.Entity("API_AGROMG.Model.Admin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Password");

                    b.Property<string>("Username");

                    b.HasKey("Id");

                    b.ToTable("Admins");
                });

            modelBuilder.Entity("API_AGROMG.Model.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<string>("Email");

                    b.Property<int>("HumanCount");

                    b.Property<string>("Name");

                    b.Property<int?>("PacketId");

                    b.Property<bool>("Status");

                    b.Property<DateTime>("StatusFinishDate");

                    b.Property<string>("Tel");

                    b.HasKey("Id");

                    b.HasIndex("PacketId");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("API_AGROMG.Model.CropCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("Id");

                    b.ToTable("CropCategories");
                });

            modelBuilder.Entity("API_AGROMG.Model.CropCategoryLanguage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CropCategoryId");

                    b.Property<int?>("LanguageId");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("CropCategoryId");

                    b.HasIndex("LanguageId");

                    b.ToTable("CropCategoryLanguages");
                });

            modelBuilder.Entity("API_AGROMG.Model.CropLanguage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CropsId");

                    b.Property<int?>("LanguageId");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("CropsId");

                    b.HasIndex("LanguageId");

                    b.ToTable("CropLanguages");
                });

            modelBuilder.Entity("API_AGROMG.Model.Crops", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CompanyId");

                    b.Property<int?>("CropCategoryId");

                    b.Property<bool>("Status");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("CropCategoryId");

                    b.ToTable("Crops");
                });

            modelBuilder.Entity("API_AGROMG.Model.Fertilizer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Category");

                    b.Property<int?>("CompanyId");

                    b.Property<int?>("MainIngredientId");

                    b.Property<int>("MeasurementUnit");

                    b.Property<string>("Name");

                    b.Property<bool>("Status");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("MainIngredientId");

                    b.ToTable("Fertilizer");
                });

            modelBuilder.Entity("API_AGROMG.Model.Gender", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Key");

                    b.HasKey("Id");

                    b.ToTable("Genders");
                });

            modelBuilder.Entity("API_AGROMG.Model.Language", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.Property<string>("code");

                    b.Property<string>("code2");

                    b.Property<string>("iso");

                    b.HasKey("Id");

                    b.ToTable("Languages");
                });

            modelBuilder.Entity("API_AGROMG.Model.LanguageContext", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Context");

                    b.Property<string>("Key");

                    b.Property<string>("LangUnicode");

                    b.HasKey("Id");

                    b.ToTable("LanguageContexts");
                });

            modelBuilder.Entity("API_AGROMG.Model.MainIngredient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CompanyId");

                    b.Property<string>("Name");

                    b.Property<bool>("Status");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("MainIngredients");
                });

            modelBuilder.Entity("API_AGROMG.Model.MeasurementUnit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("LanguageId");

                    b.Property<int>("MainId");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.ToTable("MeasurementUnits");
                });

            modelBuilder.Entity("API_AGROMG.Model.MedicalStock", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Barcode");

                    b.Property<int?>("CompanyId");

                    b.Property<decimal>("Count");

                    b.Property<DateTime>("Expirydate");

                    b.Property<int?>("FertilizerId");

                    b.Property<int>("WareHourse");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("FertilizerId");

                    b.ToTable("MedicalStock");
                });

            modelBuilder.Entity("API_AGROMG.Model.Modules", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NameKey");

                    b.Property<string>("NumberKey");

                    b.HasKey("Id");

                    b.ToTable("Modules");
                });

            modelBuilder.Entity("API_AGROMG.Model.Packet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Content");

                    b.Property<int>("HumanCount");

                    b.Property<string>("NameKey");

                    b.Property<decimal>("Price");

                    b.HasKey("Id");

                    b.ToTable("Packets");
                });

            modelBuilder.Entity("API_AGROMG.Model.Parcel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Area");

                    b.Property<int?>("CompanyId");

                    b.Property<int?>("CropsId");

                    b.Property<string>("Name");

                    b.Property<int?>("ParcelCategoryId");

                    b.Property<bool>("Status");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("CropsId");

                    b.HasIndex("ParcelCategoryId");

                    b.ToTable("Parcels");
                });

            modelBuilder.Entity("API_AGROMG.Model.ParcelCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("Id");

                    b.ToTable("ParcelCategories");
                });

            modelBuilder.Entity("API_AGROMG.Model.ParcelCategoryLanguage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("LanguageId");

                    b.Property<string>("Name");

                    b.Property<int?>("ParcelCategoryId");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.HasIndex("ParcelCategoryId");

                    b.ToTable("ParcelCategoryLanguages");
                });

            modelBuilder.Entity("API_AGROMG.Model.PermissionsGroups", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CompanyId");

                    b.Property<string>("Name");

                    b.Property<string>("RolContent");

                    b.Property<bool>("Status");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("PermissionsGroups");
                });

            modelBuilder.Entity("API_AGROMG.Model.Profession", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CompanyId");

                    b.Property<bool>("Respondent");

                    b.Property<bool>("Status");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("Professions");
                });

            modelBuilder.Entity("API_AGROMG.Model.ProfessionLanguange", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("LanguageId");

                    b.Property<string>("Name");

                    b.Property<int?>("ProfessionId");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.HasIndex("ProfessionId");

                    b.ToTable("ProfessionLanguanges");
                });

            modelBuilder.Entity("API_AGROMG.Model.TemporaryAccountKind", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.Property<bool>("Status");

                    b.HasKey("Id");

                    b.ToTable("TemporaryAccountKind");
                });

            modelBuilder.Entity("API_AGROMG.Model.TemporaryCustomer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.Property<bool>("Status");

                    b.HasKey("Id");

                    b.ToTable("TemporaryCustomer");
                });

            modelBuilder.Entity("API_AGROMG.Model.TemporaryOperationKind", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.Property<bool>("Status");

                    b.HasKey("Id");

                    b.ToTable("TemporaryOperationKind");
                });

            modelBuilder.Entity("API_AGROMG.Model.TemporaryParcel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.Property<bool>("Status");

                    b.HasKey("Id");

                    b.ToTable("TemporaryParcel");
                });

            modelBuilder.Entity("API_AGROMG.Model.TemporaryPayAccount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.Property<bool>("Status");

                    b.HasKey("Id");

                    b.ToTable("TemporaryPayAccount");
                });

            modelBuilder.Entity("API_AGROMG.Model.Users", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte[]>("PasswordHash");

                    b.Property<byte[]>("PasswordSalt");

                    b.Property<int?>("PermissionsGroupsId");

                    b.Property<string>("Username");

                    b.Property<int?>("WorkersId");

                    b.HasKey("Id");

                    b.HasIndex("PermissionsGroupsId");

                    b.HasIndex("WorkersId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("API_AGROMG.Model.WareHourse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Category");

                    b.Property<int?>("CompanyId");

                    b.Property<int?>("LanguageId");

                    b.Property<int>("MainId");

                    b.Property<string>("Name");

                    b.Property<bool>("Status");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("LanguageId");

                    b.ToTable("WareHourses");
                });

            modelBuilder.Entity("API_AGROMG.Model.WareHouseCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("LanguageId");

                    b.Property<int>("MainId");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.ToTable("WareHouseCategories");
                });

            modelBuilder.Entity("API_AGROMG.Model.WorkPlan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ActionId");

                    b.Property<int?>("CompanyId");

                    b.Property<int?>("CreatedId");

                    b.Property<DateTime>("EndDate");

                    b.Property<DateTime>("FinisDate");

                    b.Property<string>("Name");

                    b.Property<int?>("RespondentId");

                    b.Property<DateTime>("StartDate");

                    b.Property<bool>("Status");

                    b.HasKey("Id");

                    b.HasIndex("ActionId");

                    b.HasIndex("CompanyId");

                    b.HasIndex("CreatedId");

                    b.HasIndex("RespondentId");

                    b.ToTable("WorkPlans");
                });

            modelBuilder.Entity("API_AGROMG.Model.WorkPlanActionLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ActionId");

                    b.Property<DateTime>("ActionTime");

                    b.Property<DateTime>("EndDate");

                    b.Property<DateTime>("Finishdate");

                    b.Property<string>("Name");

                    b.Property<int?>("PerformingUserId");

                    b.Property<int?>("ResponderId");

                    b.Property<DateTime>("StartDate");

                    b.Property<int?>("WorkPlanId");

                    b.HasKey("Id");

                    b.HasIndex("ActionId");

                    b.HasIndex("PerformingUserId");

                    b.HasIndex("ResponderId");

                    b.HasIndex("WorkPlanId");

                    b.ToTable("WorkPlanActionLogs");
                });

            modelBuilder.Entity("API_AGROMG.Model.WorkPlanTask", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("EndDate");

                    b.Property<DateTime>("FinishDate");

                    b.Property<string>("Name");

                    b.Property<DateTime>("StartDate");

                    b.Property<bool>("Status");

                    b.Property<int?>("WorkPlanId");

                    b.HasKey("Id");

                    b.HasIndex("WorkPlanId");

                    b.ToTable("WorkPlanTasks");
                });

            modelBuilder.Entity("API_AGROMG.Model.WorkPlanTaskActionLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ActionId");

                    b.Property<DateTime>("EndDate");

                    b.Property<DateTime>("FinishDate");

                    b.Property<DateTime>("Startdate");

                    b.Property<int?>("WorkPlanActionLogId");

                    b.Property<int?>("WorkPlanTaskId");

                    b.Property<string>("name");

                    b.HasKey("Id");

                    b.HasIndex("ActionId");

                    b.HasIndex("WorkPlanActionLogId");

                    b.HasIndex("WorkPlanTaskId");

                    b.ToTable("WorkPlanTaskActionLogs");
                });

            modelBuilder.Entity("API_AGROMG.Model.WorkerProfessions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("EndDate");

                    b.Property<string>("EndReason");

                    b.Property<int?>("ProfessionId");

                    b.Property<DateTime>("Startdate");

                    b.Property<bool>("Status");

                    b.Property<int?>("WorkersId");

                    b.HasKey("Id");

                    b.HasIndex("ProfessionId");

                    b.HasIndex("WorkersId");

                    b.ToTable("WorkerProfessions");
                });

            modelBuilder.Entity("API_AGROMG.Model.WorkerSalary", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("EndSalary");

                    b.Property<decimal>("GrossSalary");

                    b.Property<decimal>("NetSalary");

                    b.Property<DateTime>("StartSalary");

                    b.Property<bool>("Status");

                    b.Property<int?>("WorkersId");

                    b.HasKey("Id");

                    b.HasIndex("WorkersId");

                    b.ToTable("WorkerSalaries");
                });

            modelBuilder.Entity("API_AGROMG.Model.Workers", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adress");

                    b.Property<DateTime>("Birthday");

                    b.Property<int?>("CompanyId");

                    b.Property<string>("Email");

                    b.Property<int>("Gender");

                    b.Property<string>("Name");

                    b.Property<bool>("Status");

                    b.Property<string>("Tel");

                    b.Property<DateTime>("WorkEndDate");

                    b.Property<string>("WorkEndReason");

                    b.Property<DateTime>("WorkStartDate");

                    b.Property<int>("WorkStatus");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("Workers");
                });

            modelBuilder.Entity("API_AGROMG.Model.ActionLanguange", b =>
                {
                    b.HasOne("API_AGROMG.Model.Action", "Action")
                        .WithMany()
                        .HasForeignKey("ActionId");

                    b.HasOne("API_AGROMG.Model.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId");
                });

            modelBuilder.Entity("API_AGROMG.Model.Company", b =>
                {
                    b.HasOne("API_AGROMG.Model.Packet", "Packet")
                        .WithMany()
                        .HasForeignKey("PacketId");
                });

            modelBuilder.Entity("API_AGROMG.Model.CropCategoryLanguage", b =>
                {
                    b.HasOne("API_AGROMG.Model.CropCategory", "CropCategory")
                        .WithMany()
                        .HasForeignKey("CropCategoryId");

                    b.HasOne("API_AGROMG.Model.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId");
                });

            modelBuilder.Entity("API_AGROMG.Model.CropLanguage", b =>
                {
                    b.HasOne("API_AGROMG.Model.Crops", "Crops")
                        .WithMany()
                        .HasForeignKey("CropsId");

                    b.HasOne("API_AGROMG.Model.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId");
                });

            modelBuilder.Entity("API_AGROMG.Model.Crops", b =>
                {
                    b.HasOne("API_AGROMG.Model.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId");

                    b.HasOne("API_AGROMG.Model.CropCategory", "CropCategory")
                        .WithMany()
                        .HasForeignKey("CropCategoryId");
                });

            modelBuilder.Entity("API_AGROMG.Model.Fertilizer", b =>
                {
                    b.HasOne("API_AGROMG.Model.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId");

                    b.HasOne("API_AGROMG.Model.MainIngredient", "MainIngredient")
                        .WithMany()
                        .HasForeignKey("MainIngredientId");
                });

            modelBuilder.Entity("API_AGROMG.Model.MainIngredient", b =>
                {
                    b.HasOne("API_AGROMG.Model.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId");
                });

            modelBuilder.Entity("API_AGROMG.Model.MeasurementUnit", b =>
                {
                    b.HasOne("API_AGROMG.Model.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId");
                });

            modelBuilder.Entity("API_AGROMG.Model.MedicalStock", b =>
                {
                    b.HasOne("API_AGROMG.Model.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId");

                    b.HasOne("API_AGROMG.Model.Fertilizer", "Fertilizer")
                        .WithMany()
                        .HasForeignKey("FertilizerId");
                });

            modelBuilder.Entity("API_AGROMG.Model.Parcel", b =>
                {
                    b.HasOne("API_AGROMG.Model.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId");

                    b.HasOne("API_AGROMG.Model.Crops", "Crops")
                        .WithMany()
                        .HasForeignKey("CropsId");

                    b.HasOne("API_AGROMG.Model.ParcelCategory", "ParcelCategory")
                        .WithMany()
                        .HasForeignKey("ParcelCategoryId");
                });

            modelBuilder.Entity("API_AGROMG.Model.ParcelCategoryLanguage", b =>
                {
                    b.HasOne("API_AGROMG.Model.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId");

                    b.HasOne("API_AGROMG.Model.ParcelCategory", "ParcelCategory")
                        .WithMany()
                        .HasForeignKey("ParcelCategoryId");
                });

            modelBuilder.Entity("API_AGROMG.Model.PermissionsGroups", b =>
                {
                    b.HasOne("API_AGROMG.Model.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId");
                });

            modelBuilder.Entity("API_AGROMG.Model.Profession", b =>
                {
                    b.HasOne("API_AGROMG.Model.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId");
                });

            modelBuilder.Entity("API_AGROMG.Model.ProfessionLanguange", b =>
                {
                    b.HasOne("API_AGROMG.Model.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId");

                    b.HasOne("API_AGROMG.Model.Profession", "Profession")
                        .WithMany()
                        .HasForeignKey("ProfessionId");
                });

            modelBuilder.Entity("API_AGROMG.Model.Users", b =>
                {
                    b.HasOne("API_AGROMG.Model.PermissionsGroups", "PermissionsGroups")
                        .WithMany()
                        .HasForeignKey("PermissionsGroupsId");

                    b.HasOne("API_AGROMG.Model.Workers", "Workers")
                        .WithMany()
                        .HasForeignKey("WorkersId");
                });

            modelBuilder.Entity("API_AGROMG.Model.WareHourse", b =>
                {
                    b.HasOne("API_AGROMG.Model.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId");

                    b.HasOne("API_AGROMG.Model.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId");
                });

            modelBuilder.Entity("API_AGROMG.Model.WareHouseCategory", b =>
                {
                    b.HasOne("API_AGROMG.Model.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId");
                });

            modelBuilder.Entity("API_AGROMG.Model.WorkPlan", b =>
                {
                    b.HasOne("API_AGROMG.Model.Action", "Action")
                        .WithMany()
                        .HasForeignKey("ActionId");

                    b.HasOne("API_AGROMG.Model.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId");

                    b.HasOne("API_AGROMG.Model.Workers", "Created")
                        .WithMany()
                        .HasForeignKey("CreatedId");

                    b.HasOne("API_AGROMG.Model.Workers", "Respondent")
                        .WithMany()
                        .HasForeignKey("RespondentId");
                });

            modelBuilder.Entity("API_AGROMG.Model.WorkPlanActionLog", b =>
                {
                    b.HasOne("API_AGROMG.Model.Action", "Action")
                        .WithMany()
                        .HasForeignKey("ActionId");

                    b.HasOne("API_AGROMG.Model.Workers", "PerformingUser")
                        .WithMany()
                        .HasForeignKey("PerformingUserId");

                    b.HasOne("API_AGROMG.Model.Workers", "Responder")
                        .WithMany()
                        .HasForeignKey("ResponderId");

                    b.HasOne("API_AGROMG.Model.WorkPlan", "WorkPlan")
                        .WithMany()
                        .HasForeignKey("WorkPlanId");
                });

            modelBuilder.Entity("API_AGROMG.Model.WorkPlanTask", b =>
                {
                    b.HasOne("API_AGROMG.Model.WorkPlan", "WorkPlan")
                        .WithMany()
                        .HasForeignKey("WorkPlanId");
                });

            modelBuilder.Entity("API_AGROMG.Model.WorkPlanTaskActionLog", b =>
                {
                    b.HasOne("API_AGROMG.Model.Action", "Action")
                        .WithMany()
                        .HasForeignKey("ActionId");

                    b.HasOne("API_AGROMG.Model.WorkPlanActionLog", "WorkPlanActionLog")
                        .WithMany()
                        .HasForeignKey("WorkPlanActionLogId");

                    b.HasOne("API_AGROMG.Model.WorkPlanTask", "WorkPlanTask")
                        .WithMany()
                        .HasForeignKey("WorkPlanTaskId");
                });

            modelBuilder.Entity("API_AGROMG.Model.WorkerProfessions", b =>
                {
                    b.HasOne("API_AGROMG.Model.Profession", "Profession")
                        .WithMany()
                        .HasForeignKey("ProfessionId");

                    b.HasOne("API_AGROMG.Model.Workers", "Workers")
                        .WithMany()
                        .HasForeignKey("WorkersId");
                });

            modelBuilder.Entity("API_AGROMG.Model.WorkerSalary", b =>
                {
                    b.HasOne("API_AGROMG.Model.Workers", "Workers")
                        .WithMany()
                        .HasForeignKey("WorkersId");
                });

            modelBuilder.Entity("API_AGROMG.Model.Workers", b =>
                {
                    b.HasOne("API_AGROMG.Model.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId");
                });
#pragma warning restore 612, 618
        }
    }
}
